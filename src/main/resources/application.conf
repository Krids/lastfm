# LastFM Session Analysis Configuration

# Environment configuration
environment = "development"
environment = ${?ENV}

# Spark configuration
spark {
  app.name = "LastFM-Session-Analyzer"
  master = "local[*]"
  master = ${?SPARK_MASTER}
  
  # Performance settings
  sql.adaptive.enabled = true
  sql.adaptive.skewJoin.enabled = true
  sql.adaptive.coalescePartitions.enabled = true
  serializer = "org.apache.spark.serializer.KryoSerializer"
  
  # Memory settings
  driver.memory = "4g"
  driver.memory = ${?SPARK_DRIVER_MEMORY}
  executor.memory = "4g"
  executor.memory = ${?SPARK_EXECUTOR_MEMORY}
  
  # Partitioning
  partitions.default = 16
  partitions.default = ${?SPARK_PARTITIONS}
  partitions.ranking = 8
  partitions.output = 1
}

# Data paths configuration
data {
  # Input paths
  input {
    base = "data/input"
    base = ${?DATA_INPUT_PATH}
    dataset = ${data.input.base}"/lastfm-dataset-1k"
    profile = ${data.input.dataset}"/userid-profile.tsv"
    events = ${data.input.dataset}"/userid-timestamp-artid-artname-traid-traname.tsv"
  }
  
  # Output paths
  output {
    base = "data/output"
    base = ${?DATA_OUTPUT_PATH}
    bronze = ${data.output.base}"/bronze"
    silver = ${data.output.base}"/silver"
    gold = ${data.output.base}"/gold"
    results = ${data.output.base}"/results"
  }
}

# Pipeline configuration
pipeline {
  # Session analysis settings
  session {
    gap.minutes = 20
    gap.minutes = ${?SESSION_GAP_MINUTES}
  }
  
  # Ranking settings
  ranking {
    top.sessions = 50
    top.sessions = ${?TOP_SESSIONS}
    top.tracks = 10
    top.tracks = ${?TOP_TRACKS}
  }
  
  # Quality thresholds
  quality {
    acceptable.threshold = 95.0
    acceptable.threshold = ${?QUALITY_THRESHOLD}
    max.rejection.rate = 0.05
    max.rejection.rate = ${?MAX_REJECTION_RATE}
  }
  
  # Retry configuration
  retry {
    max.attempts = 3
    max.attempts = ${?RETRY_MAX_ATTEMPTS}
    delay.ms = 1000
    delay.ms = ${?RETRY_DELAY_MS}
    backoff.multiplier = 2.0
    backoff.multiplier = ${?RETRY_BACKOFF_MULTIPLIER}
  }
  
  # Cache configuration
  cache {
    enabled = true
    enabled = ${?CACHE_ENABLED}
    storage.level = "MEMORY_AND_DISK_SER"
    storage.level = ${?CACHE_STORAGE_LEVEL}
  }
}

# Monitoring configuration
monitoring {
  metrics {
    enabled = true
    enabled = ${?METRICS_ENABLED}
    interval.seconds = 60
    interval.seconds = ${?METRICS_INTERVAL}
  }
  
  # Performance thresholds
  performance {
    warning.threshold.ms = 5000
    warning.threshold.ms = ${?PERF_WARNING_MS}
    error.threshold.ms = 30000
    error.threshold.ms = ${?PERF_ERROR_MS}
  }
}
